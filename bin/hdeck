#!/usr/bin/env ruby

require 'thor'
require 'yaml/store'
require_relative '../lib/hdeck'

class CLI < Thor
  package_name "hdeck"

  desc "new", "create a new harrow deck"
  option :alignment, default: 'CN'
  def new
    store = YAML::Store.new 'hdeck.store'

    store.transaction do
      store[:player] = HDeck::CardCaster.new(alignment: options[:alignment])
    end
  end

  desc "draw", "draw from harrow deck (with replacement)"
  def draw
    store = YAML::Store.new 'hdeck.store'
    player = store.transaction { store[:player] }
    player.draw_card(shuffle_before: true, replace: true)
  end

  desc "throw", "throw card from harrow deck (no replacement)"
  def throw
    store = YAML::Store.new 'hdeck.store'
    player = store.transaction { store[:player] }
    player.draw_card(
      shuffle_before: true,
      replace: false,
      calculate_match: true
    )

    store.transaction do
      store[:player] = player
    end
  end

  desc "length", "number of cards left in the deck"
  def length
    store = YAML::Store.new 'hdeck.store'
    player = store.transaction { store[:player] }
    puts player.deck.length
  end
end

CLI.start(ARGV)
